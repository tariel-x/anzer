// Generated from /home/nikita/go/src/github.com/tariel-x/anzer/parser/Anzer.g4 by ANTLR 4.7.

package parser

import (
	"fmt"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = unicode.IsLetter

var serializedLexerAtn = []uint16{
	3, 24715, 42794, 33075, 47597, 16764, 15335, 30598, 22884, 2, 27, 208,
	8, 1, 4, 2, 9, 2, 4, 3, 9, 3, 4, 4, 9, 4, 4, 5, 9, 5, 4, 6, 9, 6, 4, 7,
	9, 7, 4, 8, 9, 8, 4, 9, 9, 9, 4, 10, 9, 10, 4, 11, 9, 11, 4, 12, 9, 12,
	4, 13, 9, 13, 4, 14, 9, 14, 4, 15, 9, 15, 4, 16, 9, 16, 4, 17, 9, 17, 4,
	18, 9, 18, 4, 19, 9, 19, 4, 20, 9, 20, 4, 21, 9, 21, 4, 22, 9, 22, 4, 23,
	9, 23, 4, 24, 9, 24, 4, 25, 9, 25, 4, 26, 9, 26, 4, 27, 9, 27, 4, 28, 9,
	28, 4, 29, 9, 29, 4, 30, 9, 30, 4, 31, 9, 31, 4, 32, 9, 32, 3, 2, 3, 2,
	3, 2, 3, 2, 3, 2, 3, 3, 3, 3, 3, 4, 3, 4, 3, 4, 3, 5, 3, 5, 3, 5, 3, 6,
	3, 6, 3, 7, 3, 7, 3, 8, 3, 8, 3, 9, 3, 9, 3, 10, 3, 10, 3, 11, 3, 11, 3,
	11, 3, 11, 3, 11, 3, 12, 3, 12, 3, 12, 3, 12, 3, 12, 3, 12, 3, 13, 3, 13,
	3, 13, 3, 13, 3, 13, 3, 14, 3, 14, 3, 15, 3, 15, 3, 16, 3, 16, 3, 17, 3,
	17, 3, 18, 3, 18, 3, 19, 3, 19, 3, 20, 3, 20, 6, 20, 119, 10, 20, 13, 20,
	14, 20, 120, 3, 21, 3, 21, 7, 21, 125, 10, 21, 12, 21, 14, 21, 128, 11,
	21, 3, 22, 6, 22, 131, 10, 22, 13, 22, 14, 22, 132, 3, 23, 3, 23, 3, 23,
	7, 23, 138, 10, 23, 12, 23, 14, 23, 141, 11, 23, 3, 23, 3, 23, 3, 24, 3,
	24, 3, 24, 5, 24, 148, 10, 24, 3, 25, 3, 25, 3, 25, 3, 25, 3, 25, 3, 25,
	3, 26, 3, 26, 3, 27, 3, 27, 3, 28, 5, 28, 161, 10, 28, 3, 28, 3, 28, 3,
	28, 6, 28, 166, 10, 28, 13, 28, 14, 28, 167, 5, 28, 170, 10, 28, 3, 28,
	5, 28, 173, 10, 28, 3, 29, 3, 29, 3, 29, 7, 29, 178, 10, 29, 12, 29, 14,
	29, 181, 11, 29, 5, 29, 183, 10, 29, 3, 30, 3, 30, 5, 30, 187, 10, 30,
	3, 30, 3, 30, 3, 31, 6, 31, 192, 10, 31, 13, 31, 14, 31, 193, 3, 31, 3,
	31, 3, 32, 3, 32, 3, 32, 3, 32, 7, 32, 202, 10, 32, 12, 32, 14, 32, 205,
	11, 32, 3, 32, 3, 32, 2, 2, 33, 3, 3, 5, 4, 7, 5, 9, 6, 11, 7, 13, 8, 15,
	9, 17, 10, 19, 11, 21, 12, 23, 13, 25, 14, 27, 15, 29, 16, 31, 17, 33,
	18, 35, 19, 37, 20, 39, 21, 41, 22, 43, 23, 45, 24, 47, 2, 49, 2, 51, 2,
	53, 2, 55, 25, 57, 2, 59, 2, 61, 26, 63, 27, 3, 2, 17, 4, 2, 44, 44, 126,
	126, 3, 2, 67, 92, 5, 2, 50, 59, 67, 92, 97, 97, 3, 2, 99, 124, 5, 2, 50,
	59, 67, 92, 99, 124, 5, 2, 50, 59, 97, 97, 99, 124, 10, 2, 36, 36, 49,
	49, 94, 94, 100, 100, 104, 104, 112, 112, 116, 116, 118, 118, 5, 2, 50,
	59, 67, 72, 99, 104, 5, 2, 2, 33, 36, 36, 94, 94, 3, 2, 50, 59, 3, 2, 51,
	59, 4, 2, 71, 71, 103, 103, 4, 2, 45, 45, 47, 47, 5, 2, 11, 12, 15, 15,
	34, 34, 4, 2, 12, 12, 15, 15, 2, 216, 2, 3, 3, 2, 2, 2, 2, 5, 3, 2, 2,
	2, 2, 7, 3, 2, 2, 2, 2, 9, 3, 2, 2, 2, 2, 11, 3, 2, 2, 2, 2, 13, 3, 2,
	2, 2, 2, 15, 3, 2, 2, 2, 2, 17, 3, 2, 2, 2, 2, 19, 3, 2, 2, 2, 2, 21, 3,
	2, 2, 2, 2, 23, 3, 2, 2, 2, 2, 25, 3, 2, 2, 2, 2, 27, 3, 2, 2, 2, 2, 29,
	3, 2, 2, 2, 2, 31, 3, 2, 2, 2, 2, 33, 3, 2, 2, 2, 2, 35, 3, 2, 2, 2, 2,
	37, 3, 2, 2, 2, 2, 39, 3, 2, 2, 2, 2, 41, 3, 2, 2, 2, 2, 43, 3, 2, 2, 2,
	2, 45, 3, 2, 2, 2, 2, 55, 3, 2, 2, 2, 2, 61, 3, 2, 2, 2, 2, 63, 3, 2, 2,
	2, 3, 65, 3, 2, 2, 2, 5, 70, 3, 2, 2, 2, 7, 72, 3, 2, 2, 2, 9, 75, 3, 2,
	2, 2, 11, 78, 3, 2, 2, 2, 13, 80, 3, 2, 2, 2, 15, 82, 3, 2, 2, 2, 17, 84,
	3, 2, 2, 2, 19, 86, 3, 2, 2, 2, 21, 88, 3, 2, 2, 2, 23, 93, 3, 2, 2, 2,
	25, 99, 3, 2, 2, 2, 27, 104, 3, 2, 2, 2, 29, 106, 3, 2, 2, 2, 31, 108,
	3, 2, 2, 2, 33, 110, 3, 2, 2, 2, 35, 112, 3, 2, 2, 2, 37, 114, 3, 2, 2,
	2, 39, 116, 3, 2, 2, 2, 41, 122, 3, 2, 2, 2, 43, 130, 3, 2, 2, 2, 45, 134,
	3, 2, 2, 2, 47, 144, 3, 2, 2, 2, 49, 149, 3, 2, 2, 2, 51, 155, 3, 2, 2,
	2, 53, 157, 3, 2, 2, 2, 55, 160, 3, 2, 2, 2, 57, 182, 3, 2, 2, 2, 59, 184,
	3, 2, 2, 2, 61, 191, 3, 2, 2, 2, 63, 197, 3, 2, 2, 2, 65, 66, 7, 102, 2,
	2, 66, 67, 7, 99, 2, 2, 67, 68, 7, 118, 2, 2, 68, 69, 7, 99, 2, 2, 69,
	4, 3, 2, 2, 2, 70, 71, 7, 63, 2, 2, 71, 6, 3, 2, 2, 2, 72, 73, 7, 60, 2,
	2, 73, 74, 7, 60, 2, 2, 74, 8, 3, 2, 2, 2, 75, 76, 7, 47, 2, 2, 76, 77,
	7, 64, 2, 2, 77, 10, 3, 2, 2, 2, 78, 79, 7, 48, 2, 2, 79, 12, 3, 2, 2,
	2, 80, 81, 7, 62, 2, 2, 81, 14, 3, 2, 2, 2, 82, 83, 7, 46, 2, 2, 83, 16,
	3, 2, 2, 2, 84, 85, 7, 64, 2, 2, 85, 18, 3, 2, 2, 2, 86, 87, 7, 97, 2,
	2, 87, 20, 3, 2, 2, 2, 88, 89, 7, 118, 2, 2, 89, 90, 7, 116, 2, 2, 90,
	91, 7, 119, 2, 2, 91, 92, 7, 103, 2, 2, 92, 22, 3, 2, 2, 2, 93, 94, 7,
	104, 2, 2, 94, 95, 7, 99, 2, 2, 95, 96, 7, 110, 2, 2, 96, 97, 7, 117, 2,
	2, 97, 98, 7, 103, 2, 2, 98, 24, 3, 2, 2, 2, 99, 100, 7, 112, 2, 2, 100,
	101, 7, 119, 2, 2, 101, 102, 7, 110, 2, 2, 102, 103, 7, 110, 2, 2, 103,
	26, 3, 2, 2, 2, 104, 105, 7, 125, 2, 2, 105, 28, 3, 2, 2, 2, 106, 107,
	7, 127, 2, 2, 107, 30, 3, 2, 2, 2, 108, 109, 7, 60, 2, 2, 109, 32, 3, 2,
	2, 2, 110, 111, 7, 93, 2, 2, 111, 34, 3, 2, 2, 2, 112, 113, 7, 95, 2, 2,
	113, 36, 3, 2, 2, 2, 114, 115, 9, 2, 2, 2, 115, 38, 3, 2, 2, 2, 116, 118,
	9, 3, 2, 2, 117, 119, 9, 4, 2, 2, 118, 117, 3, 2, 2, 2, 119, 120, 3, 2,
	2, 2, 120, 118, 3, 2, 2, 2, 120, 121, 3, 2, 2, 2, 121, 40, 3, 2, 2, 2,
	122, 126, 9, 5, 2, 2, 123, 125, 9, 6, 2, 2, 124, 123, 3, 2, 2, 2, 125,
	128, 3, 2, 2, 2, 126, 124, 3, 2, 2, 2, 126, 127, 3, 2, 2, 2, 127, 42, 3,
	2, 2, 2, 128, 126, 3, 2, 2, 2, 129, 131, 9, 7, 2, 2, 130, 129, 3, 2, 2,
	2, 131, 132, 3, 2, 2, 2, 132, 130, 3, 2, 2, 2, 132, 133, 3, 2, 2, 2, 133,
	44, 3, 2, 2, 2, 134, 139, 7, 36, 2, 2, 135, 138, 5, 47, 24, 2, 136, 138,
	5, 53, 27, 2, 137, 135, 3, 2, 2, 2, 137, 136, 3, 2, 2, 2, 138, 141, 3,
	2, 2, 2, 139, 137, 3, 2, 2, 2, 139, 140, 3, 2, 2, 2, 140, 142, 3, 2, 2,
	2, 141, 139, 3, 2, 2, 2, 142, 143, 7, 36, 2, 2, 143, 46, 3, 2, 2, 2, 144,
	147, 7, 94, 2, 2, 145, 148, 9, 8, 2, 2, 146, 148, 5, 49, 25, 2, 147, 145,
	3, 2, 2, 2, 147, 146, 3, 2, 2, 2, 148, 48, 3, 2, 2, 2, 149, 150, 7, 119,
	2, 2, 150, 151, 5, 51, 26, 2, 151, 152, 5, 51, 26, 2, 152, 153, 5, 51,
	26, 2, 153, 154, 5, 51, 26, 2, 154, 50, 3, 2, 2, 2, 155, 156, 9, 9, 2,
	2, 156, 52, 3, 2, 2, 2, 157, 158, 10, 10, 2, 2, 158, 54, 3, 2, 2, 2, 159,
	161, 7, 47, 2, 2, 160, 159, 3, 2, 2, 2, 160, 161, 3, 2, 2, 2, 161, 162,
	3, 2, 2, 2, 162, 169, 5, 57, 29, 2, 163, 165, 7, 48, 2, 2, 164, 166, 9,
	11, 2, 2, 165, 164, 3, 2, 2, 2, 166, 167, 3, 2, 2, 2, 167, 165, 3, 2, 2,
	2, 167, 168, 3, 2, 2, 2, 168, 170, 3, 2, 2, 2, 169, 163, 3, 2, 2, 2, 169,
	170, 3, 2, 2, 2, 170, 172, 3, 2, 2, 2, 171, 173, 5, 59, 30, 2, 172, 171,
	3, 2, 2, 2, 172, 173, 3, 2, 2, 2, 173, 56, 3, 2, 2, 2, 174, 183, 7, 50,
	2, 2, 175, 179, 9, 12, 2, 2, 176, 178, 9, 11, 2, 2, 177, 176, 3, 2, 2,
	2, 178, 181, 3, 2, 2, 2, 179, 177, 3, 2, 2, 2, 179, 180, 3, 2, 2, 2, 180,
	183, 3, 2, 2, 2, 181, 179, 3, 2, 2, 2, 182, 174, 3, 2, 2, 2, 182, 175,
	3, 2, 2, 2, 183, 58, 3, 2, 2, 2, 184, 186, 9, 13, 2, 2, 185, 187, 9, 14,
	2, 2, 186, 185, 3, 2, 2, 2, 186, 187, 3, 2, 2, 2, 187, 188, 3, 2, 2, 2,
	188, 189, 5, 57, 29, 2, 189, 60, 3, 2, 2, 2, 190, 192, 9, 15, 2, 2, 191,
	190, 3, 2, 2, 2, 192, 193, 3, 2, 2, 2, 193, 191, 3, 2, 2, 2, 193, 194,
	3, 2, 2, 2, 194, 195, 3, 2, 2, 2, 195, 196, 8, 31, 2, 2, 196, 62, 3, 2,
	2, 2, 197, 198, 7, 49, 2, 2, 198, 199, 7, 49, 2, 2, 199, 203, 3, 2, 2,
	2, 200, 202, 10, 16, 2, 2, 201, 200, 3, 2, 2, 2, 202, 205, 3, 2, 2, 2,
	203, 201, 3, 2, 2, 2, 203, 204, 3, 2, 2, 2, 204, 206, 3, 2, 2, 2, 205,
	203, 3, 2, 2, 2, 206, 207, 8, 32, 2, 2, 207, 64, 3, 2, 2, 2, 18, 2, 120,
	126, 132, 137, 139, 147, 160, 167, 169, 172, 179, 182, 186, 193, 203, 3,
	8, 2, 2,
}

var lexerDeserializer = antlr.NewATNDeserializer(nil)
var lexerAtn = lexerDeserializer.DeserializeFromUInt16(serializedLexerAtn)

var lexerChannelNames = []string{
	"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
}

var lexerModeNames = []string{
	"DEFAULT_MODE",
}

var lexerLiteralNames = []string{
	"", "'data'", "'='", "'::'", "'->'", "'.'", "'<'", "','", "'>'", "'_'",
	"'true'", "'false'", "'null'", "'{'", "'}'", "':'", "'['", "']'",
}

var lexerSymbolicNames = []string{
	"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
	"DATA_AND_OR", "DATA_NAME_ID", "FUNC_NAME_ID", "FUNC_PARAM_ID", "STRING",
	"NUMBER", "WS", "LineComment",
}

var lexerRuleNames = []string{
	"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8",
	"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16",
	"DATA_AND_OR", "DATA_NAME_ID", "FUNC_NAME_ID", "FUNC_PARAM_ID", "STRING",
	"ESC", "UNICODE", "HEX", "SAFECODEPOINT", "NUMBER", "INT", "EXP", "WS",
	"LineComment",
}

type AnzerLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var lexerDecisionToDFA = make([]*antlr.DFA, len(lexerAtn.DecisionToState))

func init() {
	for index, ds := range lexerAtn.DecisionToState {
		lexerDecisionToDFA[index] = antlr.NewDFA(ds, index)
	}
}

func NewAnzerLexer(input antlr.CharStream) *AnzerLexer {

	l := new(AnzerLexer)

	l.BaseLexer = antlr.NewBaseLexer(input)
	l.Interpreter = antlr.NewLexerATNSimulator(l, lexerAtn, lexerDecisionToDFA, antlr.NewPredictionContextCache())

	l.channelNames = lexerChannelNames
	l.modeNames = lexerModeNames
	l.RuleNames = lexerRuleNames
	l.LiteralNames = lexerLiteralNames
	l.SymbolicNames = lexerSymbolicNames
	l.GrammarFileName = "Anzer.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// AnzerLexer tokens.
const (
	AnzerLexerT__0          = 1
	AnzerLexerT__1          = 2
	AnzerLexerT__2          = 3
	AnzerLexerT__3          = 4
	AnzerLexerT__4          = 5
	AnzerLexerT__5          = 6
	AnzerLexerT__6          = 7
	AnzerLexerT__7          = 8
	AnzerLexerT__8          = 9
	AnzerLexerT__9          = 10
	AnzerLexerT__10         = 11
	AnzerLexerT__11         = 12
	AnzerLexerT__12         = 13
	AnzerLexerT__13         = 14
	AnzerLexerT__14         = 15
	AnzerLexerT__15         = 16
	AnzerLexerT__16         = 17
	AnzerLexerDATA_AND_OR   = 18
	AnzerLexerDATA_NAME_ID  = 19
	AnzerLexerFUNC_NAME_ID  = 20
	AnzerLexerFUNC_PARAM_ID = 21
	AnzerLexerSTRING        = 22
	AnzerLexerNUMBER        = 23
	AnzerLexerWS            = 24
	AnzerLexerLineComment   = 25
)
