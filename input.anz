data SOURCE = {
    "$schema": "http://json-schema.org/draft-06/schema#",
    "title": "Some data",
    "type": "string"
}

data TYPE1 = {
   "$schema": "http://json-schema.org/draft-06/schema#",
   "title": "Person",
   "type": "object",
   "properties": {
       "firstName": {
           "type": "string"
       },
       "age": {
           "description": "Age in years",
           "type": "integer",
           "minimum": 0
       }
   },
   "required": ["firstName"]
}

data TYPE2={
   "$schema": "http://json-schema.org/draft-06/schema#",
   "title": "Person last name",
   "type": "object",
   "properties": {
       "lastName": {
           "type": "string"
       }
   },
   "required": ["lastName"]
}

data PERSON=TYPE1&TYPE2
data ALIAS = PERSON

data RESULT = {
    "$schema": "http://json-schema.org/draft-06/schema#",
    "title": "Some result",
    "type": "object",
    "properties": {
        "result": {
            "type": "bool"
        }
    },
    "required": ["result"]
}

// services
init :: _ -> SOURCE {
    "env_input": "in",
    "env_output": "out",
    "env": {
        "abc": "111"
    }
}

fName :: SOURCE -> TYPE1 {
    "env_input": "in",
    "env_output": "out",
    "env": {
        "abc": "111"
    }
}

lName :: SOURCE -> TYPE2 {
    "env_input": "in",
    "env_output": "out",
    "env": {
        "abc": "111"
    }
}

userAction :: ALIAS -> RESULT {
    "env_input": "in",
    "env_output": "out",
    "env": {
        "abc": "111"
    }
}

demonstrationFunc :: PERSON -> RESULT
demonstrationFunc = <fName,lName> . init

// main process definition
main :: _ -> RESULT
main = userAction . demonstrationFunc